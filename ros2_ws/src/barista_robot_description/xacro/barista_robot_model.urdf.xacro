<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name ="barista_robot">

  <xacro:arg name="robot_name" default="barista_robot"/>
  <xacro:property name="robot_name" value="$(arg robot_name)"/>

  <!-- Arguments -->
  <xacro:arg name="include_laser" default="true"/>
  <xacro:property name="include_laser" value="$(arg include_laser)" />
  
  <!-- Include wheel macro -->
  <xacro:include filename="$(find barista_robot_description)/xacro/wheel.xacro" />
  <!-- Include standoff macro -->
  <xacro:include filename="$(find barista_robot_description)/xacro/standoff.xacro" />
  <!-- Include cup holder tray macro -->
  <xacro:include filename="$(find barista_robot_description)/xacro/cup_holder_tray.xacro" />
  <!-- Include laser scanner macro conditionally -->
  <xacro:include filename="$(find barista_robot_description)/xacro/laser_scanner.xacro" />


    <link name="base_footprint"/>
  
    <joint name="base_joint" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link"/>
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
    </joint> 

    <!-- Base link -->
    <link name="base_link">
        <visual>
            <geometry>
                <cylinder length="0.155" radius="0.178"></cylinder> <!-- Adjust dimensions -->
            </geometry>
        </visual>
        <collision>
            <geometry>
                <cylinder length="0.155" radius="0.178"></cylinder> <!-- Adjust dimensions -->
            </geometry>
        </collision>
        <inertial>
            <mass value="10"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="0.099" ixy="0" ixz="0" iyy="0.099" iyz="0" izz="0.158"/>
        </inertial>
    </link>

    <link name="caster_front">
        <visual>
            <geometry>
                <sphere radius="0.0252"/>
            </geometry>
        </visual>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 -0.0252"/>
            <geometry>
                <sphere radius="0.01"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <sphere radius="0.0352"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.01"/>
            <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
            <inertia ixx="0.000004234" ixy="0" ixz="0" iyy="0.000004234" iyz="0" izz="0.000004234"/>
        </inertial>
    </link>
    <joint name="caster_front_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0.133 0 -0.0775" />
        <parent link="base_link" />
        <child link="caster_front" />
    </joint>
    <gazebo reference="caster_front">
            <mu1>0</mu1>
            <mu2>0</mu2>
    </gazebo>

    <link name="caster_rear">
        <visual>
            <geometry>
                <sphere radius="0.0252"/>
            </geometry>
        </visual>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 -0.0252"/>
            <geometry>
                <sphere radius="0.01"/>
            </geometry>
        </visual>
        <collision>
            <geometry>
                <sphere radius="0.0352"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.1"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="0.000004234" ixy="0" ixz="0" iyy="0.000004234" iyz="0" izz="0.000004234"/>
        </inertial>
    </link>
    <joint name="caster_rear_joint" type="fixed">
        <origin rpy="0 0 0" xyz="-0.133 0 -0.0775" />
        <parent link="base_link" />
        <child link="caster_rear" />
    </joint>
    <gazebo reference="caster_rear">
            <mu1>0</mu1>
            <mu2>0</mu2>
    </gazebo>

  <!-- Call wheel macro twice for two wheels -->
  <xacro:wheel wheel_name="wheel_right"/>
    <joint name="wheel_right_joint" type="continuous">
        <origin rpy="0 0 0" xyz="0 -0.15 -0.0775" />
        <parent link="base_link" />
        <child link="wheel_right" />
        <axis rpy="0 0 0" xyz="0 1 0"/>
        <limit effort="1.5" velocity="20"/>
    </joint>

  <xacro:wheel wheel_name="wheel_left"/>
  <joint name="wheel_left_joint" type="continuous">
        <origin rpy="0 0 0" xyz="0 0.15 -0.0775" />
        <parent link="base_link" />
        <child link="wheel_left" />
        <axis rpy="0 0 0" xyz="0 1 0"/>
        <limit effort="1.5" velocity="20"/>
    </joint>

  
  <!-- Call standoff macro four times with different parameters -->
  <xacro:standoff  standoff_name="standoff1" />
  <joint name="standoff1_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0.05 0.14 0.1875" />
        <parent link="base_link" />
        <child link="standoff1" />
    </joint>

  <xacro:standoff  standoff_name="standoff2" />
  <joint name="standoff2_joint" type="fixed">
        <origin rpy="0 0 0" xyz="-0.05 0.14 0.1875" />
        <parent link="base_link" />
        <child link="standoff2" />
  </joint>
  
  <xacro:standoff  standoff_name="standoff3" />
  <joint name="standoff3_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0.05 -0.14 0.1875" />
        <parent link="base_link" />
        <child link="standoff3" />
    </joint>

    <xacro:standoff  standoff_name="standoff4" />
    <joint name="standoff4_joint" type="fixed">
        <origin rpy="0 0 0" xyz="-0.05 -0.14 0.1875" />
        <parent link="base_link" />
        <child link="standoff4" />
    </joint>
  
  <!-- Call cup holder tray macro with parameters -->
  <xacro:cup_holder_tray link_name="cup_tray" />
  <joint name="cup_tray_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0.2975" />
        <parent link="base_link" />
        <child link="cup_tray" />
    </joint>
  
  
  <!-- Call laser scanner macro based on the value of include_laser -->
  <xacro:if value="${include_laser}">
    <xacro:laser_scanner robot_name="${robot_name}"/>
    <joint name="base_to_laser" type="fixed">
        <parent link="base_link"/>
        <child link="laser_link"/>
        <origin xyz="0 0 0.08"/> <!-- Adjust position -->
    </joint>
  </xacro:if>

   <gazebo>
        <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">

        <ros>
            <namespace>/${robot_name}</namespace>
            <remapping>/cmd_vel:=cmd_vel</remapping>
        </ros>

        <!-- wheels -->
        <left_joint>wheel_left_joint</left_joint>
        <right_joint>wheel_right_joint</right_joint>

        <!-- kinematics -->
        <wheel_separation>0.3</wheel_separation>
        <wheel_diameter>0.0704</wheel_diameter>

        <!-- limits -->
        <max_wheel_torque>1.0</max_wheel_torque>
        <max_wheel_acceleration>2.0</max_wheel_acceleration>

        <!-- output -->
        <odometry_frame>${robot_name}/odom</odometry_frame>>
        <robot_base_frame>${robot_name}/base_footprint</robot_base_frame>
        <publish_odom>true</publish_odom>
        <publish_odom_tf>true</publish_odom_tf>

        <odometry_frame>odom</odometry_frame>
        <robot_base_frame>base_footprint</robot_base_frame>

        </plugin>
    </gazebo>

     <gazebo>
    <plugin name="box_bot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
          <namespace>/${robot_name}</namespace>
          <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>

      <joint_name>wheel_left_joint</joint_name>
      <joint_name>wheel_right_joint</joint_name>

      
    </plugin>
  </gazebo>


 
</robot>
